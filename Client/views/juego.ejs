<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Conecta 4 - Juego</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

    body {
      font-family: 'Roboto', sans-serif;
      text-align: center;
      padding: 20px;
      background-color: #f5f5f5;
    }

    h1 {
      color: #333;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    }

    .board {
      display: inline-block;
      background-color: #007bff;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      padding: 10px;
      margin-bottom: 20px;
      position: relative; /* Agregado */
    }

    .row {
      display: flex;
    }

    .cell {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background-color: #fff;
      margin: 5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      cursor: pointer;
      position: relative;
      transition: transform 0.2s;
    }

    .cell:hover {
      transform: scale(1.1);
    }

    .token {
      width: 80%;
      height: 80%;
      border-radius: 50%;
      position: absolute;
      top: -70px; /* Posición inicial de la ficha fuera del tablero */
      left: 50%;
      transform: translateX(-50%);
      transition: top 0.5s ease-out;
    }

    .token.red {
      background-color: #dc3545;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .token.yellow {
      background-color: #ffc107;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
  </style>
</head>
<body>
  <h1>Conecta 4 - Juego</h1>
  <div class="board" id="board">
    <% for (let i = 0; i < 6; i++) { %>
      <div class="row">
        <% for (let j = 0; j < 7; j++) { %>
          <div class="cell" id="cell-<%= i %>-<%= j %>" onclick="dropToken(<%= j %>)"></div>
        <% } %>
      </div>
    <% } %>
  </div>
  <script>
    // Crear una matriz para representar el tablero
    const board = Array.from({ length: 6 }, () => Array(7).fill(0));

    // Función para manejar el clic en una celda del tablero
    function dropToken(col) {
      const cell = document.getElementById(`cell-${getOpenRow(col)}-${col}`);
      const token = document.createElement('div');
      token.className = 'token';
      token.classList.add(getCurrentPlayer());
      cell.appendChild(token);

      // Obtener fila disponible en la columna seleccionada
      const row = getOpenRow(col);

      // Enviar el movimiento al servidor
      const message = JSON.stringify({ col });
      console.log('Enviando mensaje al servidor:', message);
      fetch('http://localhost:5001/send', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: message
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          console.log('Respuesta del servidor:', data);
        })
        .catch(error => {
          console.error('Fetch error:', error);
        });

      // Simular la caída de la ficha animada
      setTimeout(() => {
        const cellHeight = cell.offsetHeight;
        const tokenHeight = token.offsetHeight;
        const topPosition = row + 5; // Ajustar la posición vertical
        token.style.top = `${topPosition}px`;
      }, 100);

      // Actualizar la matriz del tablero con el nuevo movimiento
      board[row][col] = getCurrentPlayer() === 'red' ? 1 : 2;

      // Aquí puedes añadir lógica para verificar si hay un ganador o cambiar el turno
    }

    // Función para obtener la fila disponible en una columna
    function getOpenRow(col) {
      for (let row = 5; row >= 0; row--) {
        if (board[row][col] === 0) {
          return row;
        }
      }
      return -1; // Columna llena (debería manejar este caso en la interfaz)
    }

    // Función para obtener el jugador actual
    function getCurrentPlayer() {
      const redTokens = document.querySelectorAll('.token.red').length;
      const yellowTokens = document.querySelectorAll('.token.yellow').length;
      return redTokens <= yellowTokens ? 'red' : 'yellow';
    }
  </script>
</body>
</html>